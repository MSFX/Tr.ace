package tests{		import com.gskinner.performance.TestSuite;	import com.gskinner.performance.MethodTest;	import flash.utils.getDefinitionByName;	import flash.utils.getQualifiedClassName;	import uk.msfx.utils.tracing.Tr;			public class WithinClassTest extends TestSuite 	{		// Public Properties:		public var loops:uint = 10000;				// Initialization:		public function WithinClassTest() 		{			name = "WithinClassTest";			description = "Comparing Tr.ace() replacements for 'withinClass'. "+loops+" loops.";			tareTest = new MethodTest(tare);			iterations = 4;			tests = [				new MethodTest(usingClass, null, "ClassName", 0, 1, "using object"),				new MethodTest(usingObject, null, "Object(this).constructor", 0, 1, "using object"),				new MethodTest(usingGetDefinition, null, "Class(getDefinitionByName(...))", 0, 1, "using object"),				new MethodTest(usingThis, null, "this", 0, 1, "using this")			];		}				// tare method that will be run to calculate the base time required to run the loop		// so it can be subtracted from the other test results.		public function tare():void 		{			for (var i:uint = 0; i < loops; i++) {	}		}				/**		 * Test performance using the class name i.e. 'WithinClassTest' passed as the withinClass parameter		 */		public function usingClass():void 		{						for (var i:uint = 0; i < loops; i++) 			{				Tr.ace("Testing 'WithinClassTest'.", Tr.MATT, WithinClassTest);			}		}				/**		 * Test performance using 'Object(this).constructor' passed as the withinClass parameter		 */		public function usingObject():void 		{			for (var i:uint = 0; i < loops; i++) 			{				Tr.ace("Testing 'Object(this).constructor'.", Tr.MATT, Object(this).constructor);			}		}				/**		 * Test performance using 'Class(getDefinitionByName(getQualifiedClassName(this)))' passed as the withinClass parameter		 */		public function usingGetDefinition():void 		{			for (var i:uint = 0; i < loops; i++) 			{				Tr.ace("Testing 'Class(getDefinitionByName(getQualifiedClassName(this)))'.", Tr.MATT, Class(getDefinitionByName(getQualifiedClassName(this))));			}		}				/**		 * Test performance using the keyword 'this' passed as the withinClass parameter		 */		public function usingThis():void 		{			for (var i:uint = 0; i < loops; i++) 			{				Tr.ace("Testing 'this'.", Tr.MATT, this);			}		}			}}